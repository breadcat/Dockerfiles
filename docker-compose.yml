
version: "2"

networks:
  proxy:
    external: true

services:
  baikal:
    image: ckulka/baikal
    container_name: baikal
    volumes:
      - $CONFDIR/baikal:/var/www/baikal/Specific
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:dav.$DOMAIN"
      traefik.port: "80"
  bitwarden:
    image: bitwardenrs/server:latest
    container_name: bitwarden
    volumes:
      - $CONFDIR/bitwarden:/data
    environment:
      - WEBSOCKET_ENABLED=true
      - SIGNUPS_ALLOWED=false
    ports:
      - 3012:3012
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:pass.$DOMAIN"
      traefik.port: "80"
  beets:
    image: linuxserver/beets
    container_name: beets
    environment:
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $CONFDIR/beets:/config
      - $DOWNDIR:/downloads
      - $POOLDIR/audio:/music
  cbreader:
    build: cbreader
    container_name: cbreader
    volumes:
      - $POOLDIR/literature/comics:/comics
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:cbr.$DOMAIN"
      traefik.port: "80"
      traefik.frontend.auth.basic.usersFile: "/app/htpasswd"
  cgit:
    image: invokr/cgit
    container_name: cgit
    volumes:
      - $SYNCDIR/src:/git
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:git.$DOMAIN"
      traefik.port: "80"
  dir-pub:
    image: corfr/h5ai
    container_name: dir-pub
    volumes:
      - $SYNCDIR/pub:/var/www
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:pub.$DOMAIN"
      traefik.port: "80"
  dir-repo:
    image: mumiehub/rclone-mount
    container_name: dir-repo
    command: "rclone --config '/config/rclone.conf' serve http '$RCLONE_REMOTE_MEDIA:' --addr '0.0.0.0:8080'"
    user: $PUID:$PGID
    volumes:
      - $CONFDIR/rclone:/config
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:repo.$DOMAIN"
      traefik.port: "8080"
      traefik.frontend.auth.basic.usersFile: "/app/htpasswd"
  dir-saves:
    image: mumiehub/rclone-mount
    container_name: dir-saves
    command: "rclone --config '/config/rclone.conf' serve http '$RCLONE_REMOTE_SAVES:' --addr '0.0.0.0:8080'"
    user: $PUID:$PGID
    volumes:
      - $CONFDIR/rclone:/config
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:saves.$DOMAIN"
      traefik.port: "8080"
  dir-unsorted:
    image: mumiehub/rclone-mount
    container_name: dir-unsorted
    command: "rclone --config '/config/rclone.conf' serve http '$RCLONE_REMOTE_UNSORTED:' --addr '0.0.0.0:8080'"
    user: $PUID:$PGID
    volumes:
      - $CONFDIR/rclone:/config
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:uns.$DOMAIN"
      traefik.port: "8080"
      traefik.frontend.auth.basic.usersFile: "/app/htpasswd"
  flexget:
    image: wiserain/flexget
    container_name: flexget
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $CONFDIR/flexget:/config
      - $DOWNDIR:/input
      - $POOLDIR:/output
    restart: unless-stopped
  ipd:
    image: joshdvir/ipd
    container_name: ipd
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:ip.$DOMAIN"
      traefik.port: "8080"
  jdownloader:
    image: plusminus/jdownloader2-headless
    container_name: jdownloader
    volumes:
      - $CONFDIR/jdownloader:/opt/JDownloader/cfg
      - $DOWNDIR:/downloads
    environment:
      - GID=$PGID
      - UID=$PUID
    restart: unless-stopped
  jekyll:
    image: jekyll/jekyll
    container_name: jekyll
    command: bash -c "jekyll serve ."
    volumes:
      - $SYNCDIR/src/blog:/srv/jekyll
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:$DOMAIN,blog.$DOMAIN,www.$DOMAIN"
      traefik.port: "4000"
  gotify:
    image: gotify/server
    container_name: gotify
    volumes:
      - $CONFDIR/gotify:/app/data
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:push.$DOMAIN"
      traefik.port: "80"
  kms-server:
    build: kms-server
    container_name: kms-server
    restart: unless-stopped
    ports:
      - 1688:1688
  lazychrono:
    build: lazychrono
    container_name: lazychrono
  ouroboros:
    container_name: ouroboros
    hostname: ouroboros
    image: pyouroboros/ouroboros
    environment:
      - CLEANUP=true
      - INTERVAL=300
      - SELF_UPDATE=true
      - TZ=$TZ
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  paperless-srv:
    image: danielquinn/paperless
    container_name: paperless-srv
    depends_on:
      - paperless-web
    volumes:
      - $CONFDIR/paperless:/usr/src/paperless/data
      - $WORKDIR:/usr/src/paperless/media
      - $SYNCDIR/import:/consume
    command: ["document_consumer"]
    restart: unless-stopped
  paperless-web:
    image: danielquinn/paperless
    container_name: paperless-web
    volumes:
      - $CONFDIR/paperless:/usr/src/paperless/data
      - $WORKDIR:/usr/src/paperless/media
      - $SYNCDIR/import:/consume
    environment:
      - PAPERLESS_OCR_LANGUAGES=eng
      - PAPERLESS_OCR_THREADS=1
    command: ["runserver", "0.0.0.0:8000"]
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:docs.$DOMAIN"
      traefik.port: "8000"
  portainer:
    image: portainer/portainer
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $CONFDIR/portainer:/data
    ports:
      - 9000:9000
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:port.$DOMAIN"
      traefik.port: "9000"
  php-dev:
    image: php:apache
    container_name: php-dev
    command: bash -c "sed -i 's|33|$PUID|g' /etc/passwd && a2enmod rewrite && apache2-foreground"
    restart: unless-stopped
    volumes:
      - $SYNCDIR/src/dev:/var/www/html
      - $SYNCDIR/pub/.fjournal/:/fj
      - $SYNCDIR/pub/.weight/:/weight
      - $POOLDIR/literature/books/:/books
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:dev.$DOMAIN"
      traefik.port: "80"
  selfoss:
    image: hardware/selfoss
    container_name: selfoss
    volumes:
      - $CONFDIR/selfoss:/selfoss/data
    environment:
      - UID=$PUID
      - GID=$PGID
      - CRON_PERIOD=60m
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:rss.$DOMAIN"
      traefik.port: "8888"
  syncthing:
    image: linuxserver/syncthing
    container_name: syncthing
    environment:
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $CONFDIR/syncthing:/config
      - $SYNCDIR:/vault
      - $SAVEDIR:/saves
    ports:
      - 22000:22000
      - 21027:21027/udp
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:sync.$DOMAIN"
      traefik.port: "8384"
  teamspeak:
    image: teamspeak
    container_name: teamspeak
    ports:
      - 9987:9987/udp
      - 10011:10011
      - 30033:30033
    environment:
      - TS3SERVER_LICENSE=accept
    restart: unless-stopped
  traefik:
    image: traefik
    container_name: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $CONFDIR/traefik/traefik.toml:/etc/traefik/traefik.toml
      - $CONFDIR/traefik/acme.json:/etc/traefik/acme.json
      - $CONFDIR/traefik:/app/
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    networks:
      - proxy
  transmission:
    image: linuxserver/transmission
    container_name: transmission
    volumes:
      - $CONFDIR/transmission:/config
      - $DOWNDIR:/downloads
      - $SYNCDIR/import:/watch
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    environment:
      - PGID=$PGID
      - PUID=$PUID
      - TZ=$TZ
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:tor.$DOMAIN"
      traefik.port: "9091"
  vsftpd:
    image: onjin/alpine-vsftpd
    container_name: vsftpd
    network_mode: host
    volumes:
      - $SYNCDIR/import:/home/files
    ports:
      - 20:20
      - 21:21
      - 10090-10100:10090-10100
    environment:
      - PASSWORD=$PASS
    restart: unless-stopped
