
version: "2"

networks:
  proxy:
    external: true

services:
  baikal:
    image: ckulka/baikal
    container_name: baikal
    volumes:
      - $CONFDIR/baikal:/var/www/baikal/Specific
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:dav.$DOMAIN"
      traefik.port: "80"
  bitwarden:
    image: bitwardenrs/server:latest
    container_name: bitwarden
    volumes:
      - $CONFDIR/bitwarden:/data
    environment:
      - WEBSOCKET_ENABLED=false
      - SIGNUPS_ALLOWED=false
    ports:
      - 3012:3012
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:pass.$DOMAIN"
      traefik.port: "80"
  cbreader:
    image: wervv/cbreader
    container_name: cbreader
    volumes:
      - $POOLDIR/literature/comics:/comics
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:cbr.$DOMAIN"
      traefik.port: "80"
      traefik.frontend.auth.basic.usersFile: "/app/htpasswd"
  cgit:
    image: invokr/cgit
    container_name: cgit
    volumes:
      - $SYNCDIR/src:/git
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:git.$DOMAIN"
      traefik.port: "80"
  dir-pub:
    image: corfr/h5ai
    container_name: dir-pub
    volumes:
      - $SYNCDIR/pub:/var/www
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:pub.$DOMAIN"
      traefik.port: "80"
  dir-repo:
    image: rclone/rclone
    container_name: dir-repo
    user: "$PUID:$PGID"
    command: "--config '/config/rclone.conf' serve http '$RCLONE_REMOTE_MEDIA' --addr '0.0.0.0:8080' -vv"
    volumes:
      - $CONFDIR/rclone:/config
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:repo.$DOMAIN"
      traefik.port: "8080"
      traefik.frontend.auth.basic.usersFile: "/app/htpasswd"
  endlessh:
    image: harshavardhanj/endlessh
    container_name: endlessh
    ports:
      - 22:2222
    restart: always
  hugo:
    image: jojomi/hugo
    container_name: hugo
    command: "hugo server --watch=true --minify --source=/src --baseURL=https://$DOMAIN --bind=0.0.0.0 --appendPort=false"
    volumes:
      - $SYNCDIR/src/blog.$DOMAIN:/src
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:$DOMAIN,blog.$DOMAIN,www.$DOMAIN"
      traefik.port: "1313"
  ipd:
    image: joshdvir/ipd
    container_name: ipd
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:ip.$DOMAIN"
      traefik.port: "8080"
  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $CONFDIR/jackett:/config
      - $SYNCDIR:/downloads
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:jack.$DOMAIN"
      traefik.port: "9117"
      traefik.frontend.auth.basic.usersFile: "/app/htpasswd"
  ouroboros:
    container_name: ouroboros
    image: pyouroboros/ouroboros
    environment:
      - CLEANUP=true
      - INTERVAL=300
      - SELF_UPDATE=true
      - TZ=$TZ
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  php-dev:
    image: php:apache
    container_name: php-dev
    command: bash -c "sed -i 's|33|$PUID|g' /etc/passwd && apt-get update && apt-get install zlib1g-dev libzip-dev libxslt-dev -y && docker-php-ext-install xsl zip && docker-php-ext-enable xsl zip && a2enmod rewrite && apache2-foreground"
    restart: unless-stopped
    volumes:
      - $SYNCDIR/src/php-dev:/var/www/html
      - $POOLDIR/literature/books/:/books
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:dev.$DOMAIN"
      traefik.port: "80"
  searx:
    image: searx/searx
    container_name: searx
    restart: unless-stopped
    volumes:
      - $CONFDIR/searx:/etc/searx
    environment:
      - SEARX_GID=$PGID
      - SEARX_UID=$PUID
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:searx.$DOMAIN"
      traefik.port: "8080"
  selfoss:
    image: hardware/selfoss
    container_name: selfoss
    volumes:
      - $CONFDIR/selfoss:/selfoss/data
    environment:
      - UID=$PUID
      - GID=$PGID
      - CRON_PERIOD=60m
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:rss.$DOMAIN"
      traefik.port: "8888"
  syncthing:
    image: linuxserver/syncthing
    container_name: syncthing
    environment:
      - PGID=$PGID
      - PUID=$PUID
    volumes:
      - $CONFDIR/syncthing:/config
      - $SYNCDIR:/vault
    ports:
      - 22000:22000
      - 21027:21027/udp
    restart: unless-stopped
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:sync.$DOMAIN"
      traefik.port: "8384"
  teamspeak:
    image: teamspeak
    container_name: teamspeak
    ports:
      - 9987:9987/udp
      - 10011:10011
      - 30033:30033
    volumes:
      - $CONFDIR/teamspeak:/var/ts3server/
    environment:
      - TS3SERVER_LICENSE=accept
    restart: unless-stopped
  traefik:
    image: traefik:1.7
    container_name: traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $CONFDIR/traefik/traefik.toml:/etc/traefik/traefik.toml
      - $CONFDIR/traefik/acme.json:/etc/traefik/acme.json
      - $CONFDIR/traefik:/app/
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    networks:
      - proxy
  wireguard:
    image: place1/wg-access-server
    container_name: wireguard
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    environment:
      WIREGUARD_PRIVATE_KEY: $WG_PRIVKEY
      STORAGE: file:///wireguard-clients/
      CONFIG: "/config.yaml"
      ADMIN_USERNAME: $NAME
      ADMIN_PASSWORD: $PASS
    volumes:
      - $CONFDIR/wireguard/data:/data
      - $CONFDIR/wireguard/clients:/wireguard-clients
      - $CONFDIR/wireguard/config.yaml:/config.yaml:ro
    ports:
      - 51820:51820/udp
    devices:
      - "/dev/net/tun:/dev/net/tun"
    networks:
      - proxy
    labels:
      traefik.frontend.rule: "Host:vpn.$DOMAIN"
      traefik.port: "8000"
